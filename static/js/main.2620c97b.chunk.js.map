{"version":3,"sources":["components/Menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["Menu","useState","counter1","setCounter1","counter2","setCounter2","counter3","setCounter3","star1","setStar1","star2","setStar2","star3","setStar3","console","log","starClick","e","nativeEvent","teamName","target","parentElement","className","operator","innerText","handleClick","revenue1","revenue2","revenue3","Container","Table","Button","onClick","id","Accordion","defaultActiveKey","Item","eventKey","Header","Body","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2620c97b.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport '../styles/styles.css';\r\nimport { Table, Container, Button, Accordion } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\n\r\n// To Do ... display all the maths, so show how many pancoins, show how many stars, then do a tally...\r\n// - nice to have, modal at start, to determine amount of teams as well as inputs so you can enter team names and stuff\r\n\r\n// - finish the rules section\r\n// Might be easier to add the tally next to the plus minus buttons as a separate column?\r\n\r\n// soo i need a seperate function for revenue\r\n\r\nfunction Menu() {\r\n    // counter team 1\r\n    const [counter1, setCounter1] = useState(5);\r\n    // counter team 2\r\n    const [counter2, setCounter2] = useState(5);\r\n    // counter team 3\r\n    const [counter3, setCounter3] = useState(5);\r\n\r\n    // star coin state\r\n    const [star1, setStar1] = useState(1);\r\n    const [star2, setStar2] = useState(1);\r\n    const [star3, setStar3] = useState(1);\r\n    console.log(counter1);\r\n    // handles star rating buttons\r\n    let starClick = (e) => {\r\n        let target = e.nativeEvent;\r\n        let teamName = e.target.parentElement.className;\r\n        let operator = e.target.innerText;\r\n\r\n        switch (teamName) {\r\n            case 'team1':\r\n                if (operator == '+') {\r\n                    setStar1(star1 + 1);\r\n                } else {\r\n                    setStar1(star1 - 1);\r\n                }\r\n                break;\r\n            case 'team2':\r\n                if (operator == '+') {\r\n                    setStar2(star2 + 1);\r\n                } else {\r\n                    setStar2(star2 - 1);\r\n                }\r\n                break;\r\n            case 'team3':\r\n                if (operator == '+') {\r\n                    setStar3(star3 + 1);\r\n                } else {\r\n                    setStar3(star3 - 1);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    // handles PanCoins\r\n    let handleClick = (e) => {\r\n        // identify parent element class/name then based on that ....if button clicked, then increment/decrement equivalent in table...boom\r\n        let target = e.nativeEvent;\r\n        let teamName = e.target.parentElement.className;\r\n        let operator = e.target.innerText;\r\n\r\n        // depending on which team button has been clicked, increment respect counter\r\n\r\n        switch (teamName) {\r\n            case 'team1':\r\n                // if + button pressed\r\n                if (operator == '+') {\r\n                    setCounter1(counter1 + 1);\r\n                } else {\r\n                    setCounter1(counter1 - 1);\r\n                }\r\n                break;\r\n            case 'team2':\r\n                if (operator == '+') {\r\n                    setCounter2(counter2 + 1);\r\n                } else {\r\n                    setCounter2(counter2 - 1);\r\n                }\r\n                break;\r\n            case 'team3':\r\n                if (operator == '+') {\r\n                    setCounter3(counter3 + 1);\r\n                } else {\r\n                    setCounter3(counter3 - 1);\r\n                }\r\n        }\r\n    };\r\n\r\n    // show total revenue from star rating multiplier and pancoin amount\r\n    let revenue1 = counter1 * star1;\r\n    let revenue2 = counter2 * star2;\r\n    let revenue3 = counter3 * star3;\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <Container>\r\n                <h1>PancakeStars</h1>\r\n                <br></br>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Team Name</th>\r\n                            <th>PanCoins</th>\r\n                            <th>Stars</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Team 1</td>\r\n                            <td className=\"team1\">\r\n                                <Button onClick={handleClick}>+</Button>\r\n                                <Button onClick={handleClick}>-</Button>\r\n                            </td>\r\n                            {/* Star Rating  */}\r\n                            <td className=\"team1\">\r\n                                <Button onClick={starClick}>+</Button>\r\n                                <Button onClick={starClick}>-</Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Team 2</td>\r\n                            <td className=\"team2\">\r\n                                <Button onClick={handleClick}>+</Button>\r\n                                <Button onClick={handleClick}>-</Button>\r\n                            </td>\r\n                            {/* star rating  */}\r\n                            <td className=\"team2\">\r\n                                <Button onClick={starClick}>+</Button>\r\n                                <Button onClick={starClick}>-</Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Team 3</td>\r\n                            <td className=\"team3\">\r\n                                <Button onClick={handleClick}>+</Button>\r\n                                <Button onClick={handleClick}>-</Button>\r\n                            </td>\r\n                            {/* star rating  */}\r\n                            <td className=\"team3\">\r\n                                <Button onClick={starClick}>+</Button>\r\n                                <Button onClick={starClick}>-</Button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table>\r\n                    <br></br>\r\n                    <thead>\r\n                        <th>Team 1 PanCoins</th>\r\n                        <th>Team 2 PanCoins</th>\r\n                        <th>Team 3 PanCoins</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <td id=\"team1_score\">{counter1}</td>\r\n                        <td id=\"team2_score\">{counter2}</td>\r\n                        <td id=\"team3_score\">{counter3}</td>\r\n                    </tbody>\r\n                    <br></br>\r\n                    <thead>\r\n                        <th>Team 1 Stars</th>\r\n                        <th>Team 2 Stars</th>\r\n                        <th>Team 3 Stars</th>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <td id=\"team1_score\">{star1}</td>\r\n                        <td id=\"team2_score\">{star2}</td>\r\n                        <td id=\"team3_score\">{star3}</td>\r\n                    </tbody>\r\n\r\n                    <br></br>\r\n                    <thead>\r\n                        <th>Team 1 Revenue</th>\r\n                        <th>Team 2 Revenue</th>\r\n                        <th>Team 3 Revenue</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <td id=\"team1_score\">{revenue1}</td>\r\n                        <td id=\"team2_score\">{revenue2}</td>\r\n                        <td id=\"team3_score\">{revenue3}</td>\r\n                    </tbody>\r\n                </Table>\r\n                <br></br>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>PancakeStars Rules</Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <ul>\r\n                                <li>\r\n                                    Each team starts with 5 PanCoins to purchase\r\n                                    ingredients.{' '}\r\n                                </li>\r\n                                <li>\r\n                                    Each team starts with a Quality Rating of 1\r\n                                    Star.{' '}\r\n                                </li>\r\n                                <li>\r\n                                    Consider carefully which Pancakes you will\r\n                                    cook first. Simple? Complex?{' '}\r\n                                </li>\r\n                                <li>\r\n                                    Consider carefully the distribution of risk,\r\n                                    um, I mean Pancakes, within your team. Do\r\n                                    you want everyone working on Complex\r\n                                    Pancakes, or should you have some simple\r\n                                    Pancakes in the mix too?{' '}\r\n                                </li>\r\n                                <li>\r\n                                    If your team is broke, and has 0 PanCoins,\r\n                                    the Regulators will undertake a Corporate\r\n                                    Bailout by giving each team an additional 5\r\n                                    PanCoins.\r\n                                </li>\r\n                            </ul>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                <br></br>\r\n                *Game created by\r\n                <a\r\n                    href=\"https://github.com/KathyReid\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    {' '}\r\n                    Kathy Reid\r\n                </a>{' '}\r\n                for 3AI Masters of Applied Cybernetics\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Menu from './components/Menu';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Menu></Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}